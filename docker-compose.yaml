name: movie-review-system
services:
  postgres:
    image: postgres:17.5
    container_name: movie_review_postgres
    env_file:
      - ./environments/db.env
    ports:
      - "5432:5432"
    volumes:
      - ./init-multiple-db.sh:/docker-entrypoint-initdb.d/init-multiple-db.sh
#      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:8.2.0
    container_name: redis_cache
    environment:
      - REDIS_HOSTNAME=redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: movie-kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://kafka:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - "9094:9094"

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    env_file:
      - ./environments/path.env
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server

  file-service:
    build:
      context: ./file-service
      dockerfile: Dockerfile
    container_name: file-service
    env_file:
      - ./environments/file.env
      - ./environments/path.env
    ports:
      - "8888:8888"
    depends_on:
      - eureka-server

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    env_file:
      - ./environments/notification.env
    ports:
      - "8085:8085"
    depends_on:
      - kafka

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    env_file:
      - ./environments/auth.env
      - ./environments/path.env
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - postgres
      - redis
      - kafka

  profile-service:
    build:
        context: ./profile-service
        dockerfile: Dockerfile
    container_name: profile-service
    env_file:
      - ./environments/profile.env
      - ./environments/path.env
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - postgres

  movie-service:
      build:
          context: ./movie-service
          dockerfile: Dockerfile
      container_name: movie-service
      env_file:
          - ./environments/movie.env
          - ./environments/path.env
      ports:
          - "8083:8083"
      depends_on:
          - eureka-server
          - postgres

  review-service:
      build:
          context: ./review-service
          dockerfile: Dockerfile
      container_name: review-service
      env_file:
          - ./environments/review.env
          - ./environments/path.env
      ports:
          - "8084:8084"
      depends_on:
          - eureka-server
          - postgres
          - kafka

volumes:
#  postgres_data:
  redis_data: